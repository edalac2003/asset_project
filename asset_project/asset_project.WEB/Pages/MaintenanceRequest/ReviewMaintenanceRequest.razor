@page "/maintenance/review"
@using System.Net;
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<div class="col-lg-12 grid-margin">
    <div class="card col-lg-12 mx-auto">
        <div class="card-body px-2 py-2">
            <h4 class="card-title">Registro Solicitudes de Mantenimiento </h4>
            <form class="form-sample">
                <div class="container">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <div class="row mt-2">
                                    <div class="col-md-6">
                                        <label>Solicitante</label>
                                        <select class="form-control">
                                            <option selected>-- Seleccione --</option>
                                            <option value="1">Solicitante 1</option>
                                            <option value="1">Solicitante 2</option>
                                            <option value="1">Solicitante 3</option>
                                            <option value="1">Solicitante 4</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="row mt-3">
                                    <p>Solicitudes registradas</p>
                                    <div class="container-scroller">
                                        <div class="table-responsive table-wrapper-scroll-y my-custom-scrollbar">
                                            <table class="table table-sm">
                                                <thead>
                                                    <tr>
                                                        <th style="width:15%">Fecha</th>
                                                        <th style="width:20%">Código Activo</th>
                                                        <th style="width:55%">Activo Fijo</th>
                                                        <th style="width:10%"></th>
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var maintenance in listMaintenance)
                                                    {
                                                        <tr>
                                                            <td>@maintenance.RegisterDate</td>
                                                            <td>@maintenance.Asset!.Code</td>
                                                            <td>@maintenance.Asset!.AssetType?.Name</td>
                                                            <td>
                                                                <button class="btn btn-outline-secondary" @onclick=@(() => viewDetail(maintenance))>Detalle</button>
                                                            </td>
                                                        </tr>
                                                    }

                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@code {
    private List<MaintenanceRequest>? listMaintenance;

    protected override async Task OnInitializedAsync()
    {
        await LoadMaintenanceRequest();
    }

    private async Task LoadMaintenanceRequest()
    {
        var responseHttp = await repository.GetAsync<List<MaintenanceRequest>>("/api/MaintenanceRequest/FindAll");
        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/countries");
                return;
            }

            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        listMaintenance = responseHttp.Response!;
    }

    [CascadingParameter]
    IModalService Modal { get; set; } = default;

    private async Task viewDetail(MaintenanceRequest maintenanceRequest, bool isEdit = false)
    {
        //IModalReference modalReference;

        //if (isEdit)
        //{
        //    modalReference = Modal.Show<ReviewMaintenanceRequest>(string.Empty, new ModalParameters().Add("Maintenance", maintenanceRequest));
        //}
        //else
        //{
        //    modalReference = Modal.Show<CreateMaintenanceRequest>();
        //}

        //var result = await modalReference.Result;
        //if (result.Confirmed)
        //{
        //    await LoadMaintenanceRequest();
        //}

        return;
    }
}
